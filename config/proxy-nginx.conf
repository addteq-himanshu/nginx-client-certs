# vim: set syntax=nginx:

server {
  listen 80;

  server_name open-open.proxy.test;

  location / {
    proxy_pass 'http://open.backend.test/';
  }
}

server {
  listen 80;

  server_name open-secure.proxy.test;

  location / {
    proxy_ssl_verify on;
    proxy_ssl_trusted_certificate /etc/nginx/ssl/certs/test-ca.pem;

    proxy_pass 'https://secure.backend.test/';
  }
}

server {
  listen 80;

  server_name open-client.proxy.test;

  location / {
    proxy_pass 'https://client.backend.test';

    # neded for SNI on the backend
    proxy_ssl_server_name     on;
    proxy_ssl_certificate     /etc/nginx/ssl/certs/client.crt;
    proxy_ssl_certificate_key /etc/nginx/ssl/private/client.key;

    proxy_ssl_trusted_certificate /etc/nginx/ssl/certs/test-ca.pem;
    proxy_ssl_verify on;
    proxy_ssl_verify_depth 2;
    proxy_ssl_session_reuse on;
  }
}

server {
  listen 443;

  server_name secure-open.proxy.test;
  
  ssl on;

  ssl_certificate /etc/nginx/ssl/certs/proxy-server.crt;
  ssl_certificate_key /etc/nginx/ssl/private/proxy-server.key;
  ssl_session_timeout 10m;
  ssl_protocols TLSv1.1 TLSv1.2;
  ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
  ssl_prefer_server_ciphers on;

  location / {
    proxy_pass 'http://open.backend.test/';
  }
}

server {
  listen 443;

  server_name secure-secure.proxy.test;
  
  ssl on;

  ssl_certificate /etc/nginx/ssl/certs/proxy-server.crt;
  ssl_certificate_key /etc/nginx/ssl/private/proxy-server.key;
  ssl_session_timeout 10m;
  ssl_protocols TLSv1.1 TLSv1.2;
  ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
  ssl_prefer_server_ciphers on;

  location / {
    proxy_ssl_verify on;
    proxy_ssl_trusted_certificate /etc/nginx/ssl/certs/test-ca.pem;

    proxy_pass 'https://secure.backend.test/';
  }
}

server {
  listen 443;

  server_name secure-client.proxy.test;
  
  ssl on;

  ssl_certificate /etc/nginx/ssl/certs/proxy-server.crt;
  ssl_certificate_key /etc/nginx/ssl/private/proxy-server.key;
  ssl_session_timeout 10m;
  ssl_protocols TLSv1.1 TLSv1.2;
  ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
  ssl_prefer_server_ciphers on;

  location / {
    proxy_ssl_verify on;
    proxy_ssl_trusted_certificate /etc/nginx/ssl/certs/test-ca.pem;

    proxy_ssl_certificate /etc/nginx/ssl/certs/client.crt;
    proxy_ssl_certificate_key /etc/nginx/ssl/private/client.key;

    proxy_pass 'https://client.backend.test/';
  }
}
